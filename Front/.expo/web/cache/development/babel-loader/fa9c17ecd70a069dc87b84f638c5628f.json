{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useState, useEffect } from 'react';\nimport styles from \"./styles\";\nimport api from \"../../service/api\";\nimport CardPessoa from \"../../componentes/CardPessoa\";\nimport Header from \"../../componentes/Header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ListaPessoas(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      lista = _useState2[0],\n      setLista = _useState2[1];\n\n  function processamentoUseEffect() {\n    return _regeneratorRuntime.async(function processamentoUseEffect$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"Recarregando dados...\");\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(carregaDados());\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    console.log('executando useffect');\n    processamentoUseEffect();\n  }, []);\n\n  function novoRegistro() {\n    navigation.navigate('CadastroPessoa');\n  }\n\n  function editaRegistro(pessoa) {\n    console.log('editar: ');\n    console.log(pessoa);\n    navigation.navigate('CadastroPessoa', {\n      pessoa: pessoa,\n      inclusao: false\n    });\n  }\n\n  function carregaDados() {\n    var resposta;\n    return _regeneratorRuntime.async(function carregaDados$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            console.log('carregando');\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(api.get('/pessoa/filter/getAll'));\n\n          case 4:\n            resposta = _context2.sent;\n            setLista(resposta.data);\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            Alert.alert(_context2.t0.toString());\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Header, {\n      metodoAdd: novoRegistro,\n      exibeIconeNovoRegistro: true,\n      novoRegistro: true\n    }), _jsx(ScrollView, {\n      style: styles.areaScroolView,\n      children: lista.map(function (pessoa, index) {\n        return _jsx(CardPessoa, {\n          pessoa: pessoa,\n          editar: editaRegistro\n        }, index.toString());\n      })\n    })]\n  });\n}","map":{"version":3,"sources":["C:/AulaFTT/_NODE/cadPessoas/telas/pessoa/index.js"],"names":["useState","useEffect","styles","api","CardPessoa","Header","ListaPessoas","navigation","lista","setLista","processamentoUseEffect","console","log","carregaDados","novoRegistro","navigate","editaRegistro","pessoa","inclusao","get","resposta","data","Alert","alert","toString","container","areaScroolView","map","index"],"mappings":";;;;;;;;;;AAIA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP;AACA,OAAOC,GAAP;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;;;AAEA,eAAe,SAASC,YAAT,OAAsC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAEjD,kBAA0BP,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOQ,KAAP;AAAA,MAAcC,QAAd;;AAEA,WAAeC,sBAAf;AAAA;AAAA;AAAA;AAAA;AACIC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AADJ;AAAA,6CAEUC,YAAY,EAFtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAZ,EAAAA,SAAS,CACL,YAAM;AACFU,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAF,IAAAA,sBAAsB;AACzB,GAJI,EAIF,EAJE,CAAT;;AAOA,WAASI,YAAT,GAAuB;AACnBP,IAAAA,UAAU,CAACQ,QAAX,CAAoB,gBAApB;AACH;;AAGD,WAASC,aAAT,CAAuBC,MAAvB,EACA;AACIN,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACAV,IAAAA,UAAU,CAACQ,QAAX,CAAoB,gBAApB,EAAsC;AAClCE,MAAAA,MAAM,EAANA,MADkC;AAC1BC,MAAAA,QAAQ,EAAC;AADiB,KAAtC;AAIH;;AAGD,WAAeL,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGQF,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAHR;AAAA,6CAI8BT,GAAG,CAACgB,GAAJ,CAAQ,uBAAR,CAJ9B;;AAAA;AAIYC,YAAAA,QAJZ;AAMQX,YAAAA,QAAQ,CAACW,QAAQ,CAACC,IAAV,CAAR;AANR;AAAA;;AAAA;AAAA;AAAA;AASQC,YAAAA,KAAK,CAACC,KAAN,CAAY,aAAEC,QAAF,EAAZ;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,MAAM,CAACuB,SAApB;AAAA,eACI,KAAC,MAAD;AAAQ,MAAA,SAAS,EAAEX,YAAnB;AAAkC,MAAA,sBAAsB,EAAE,IAA1D;AAAgE,MAAA,YAAY,EAAE;AAA9E,MADJ,EAEI,KAAC,UAAD;AAAY,MAAA,KAAK,EAAEZ,MAAM,CAACwB,cAA1B;AAAA,gBAEQlB,KAAK,CAACmB,GAAN,CAAU,UAACV,MAAD,EAASW,KAAT;AAAA,eACN,KAAC,UAAD;AAAmC,UAAA,MAAM,EAAEX,MAA3C;AAAmD,UAAA,MAAM,EAAED;AAA3D,WAAiBY,KAAK,CAACJ,QAAN,EAAjB,CADM;AAAA,OAAV;AAFR,MAFJ;AAAA,IADJ;AAaH","sourcesContent":["import {\r\n    Alert, Text, TextInput, TouchableOpacity,\r\n    View, Keyboard, ScrollView, Image\r\n} from 'react-native';\r\nimport { useState, useEffect } from 'react';\r\nimport styles from './styles';\r\nimport api from '../../service/api';\r\nimport CardPessoa from '../../componentes/CardPessoa';\r\nimport Header from '../../componentes/Header';\r\n\r\nexport default function ListaPessoas({ navigation }) {\r\n\r\n    const [lista, setLista] = useState([]);\r\n    \r\n    async function processamentoUseEffect() {\r\n        console.log(\"Recarregando dados...\");\r\n        await carregaDados();\r\n    }\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log('executando useffect');\r\n            processamentoUseEffect(); //necessário método pois aqui não pode utilizar await...\r\n        }, []);\r\n\r\n\r\n    function novoRegistro(){\r\n        navigation.navigate('CadastroPessoa');\r\n    }\r\n\r\n\r\n    function editaRegistro(pessoa)\r\n    {\r\n        console.log('editar: ');\r\n        console.log(pessoa);\r\n        navigation.navigate('CadastroPessoa', {\r\n            pessoa, inclusao:false\r\n        });\r\n\r\n    }\r\n\r\n\r\n    async function carregaDados() {\r\n        try {\r\n\r\n            console.log('carregando');\r\n            let resposta = (await api.get('/pessoa/filter/getAll'));\r\n            //console.log(resposta.data);\r\n            setLista(resposta.data);\r\n\r\n        } catch (e) {\r\n            Alert.alert(e.toString());\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Header metodoAdd={novoRegistro}  exibeIconeNovoRegistro={true} novoRegistro={true} />\r\n            <ScrollView style={styles.areaScroolView}>\r\n                {\r\n                    lista.map((pessoa, index) => (\r\n                        <CardPessoa key={index.toString()} pessoa={pessoa} editar={editaRegistro} />\r\n                    )\r\n                    )\r\n                }\r\n            </ScrollView >\r\n        </View>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}