{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useState, useEffect } from 'react';\nimport styles from \"./styles\";\nimport { Ionicons, Entypo } from '@expo/vector-icons';\nimport Header from \"../../componentes/Header\";\nimport DateTimeInput from \"../../componentes/DateTimeInput\";\nimport api from \"../../service/api\";\nimport { format } from 'date-fns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CadastroPessoa(_ref) {\n  var navigation = _ref.navigation;\n  var props = navigation.state.params;\n  console.log(navigation);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nome = _useState4[0],\n      setNome = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sexo = _useState6[0],\n      setSexo = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cidadeId = _useState8[0],\n      setCidadeId = _useState8[1];\n\n  var _useState9 = useState(new Date()),\n      _useState10 = _slicedToArray(_useState9, 2),\n      DataNascimento = _useState10[0],\n      setDataNascimento = _useState10[1];\n\n  useEffect(function () {\n    var props = navigation.state.params;\n    console.log(props);\n    var pessoa = props.pessoa;\n    var inclusao = props.inclusao;\n    console.log(pessoa);\n    console.log(\"inclusao: \" + inclusao);\n\n    if (!inclusao) {\n      setId(pessoa.id);\n      setNome(pessoa.nome);\n    }\n  }, []);\n\n  function salva() {\n    var dataHora;\n    return _regeneratorRuntime.async(function salva$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!id || id <= 0)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert(\"Informe o Id\"));\n\n          case 2:\n            dataHora = format(DataNascimento, 'yyyy-MM-dd') + 'T00:00';\n\n            if (!inclusao) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(api.post('/Pessoa', {\n              id: id,\n              nome: nome,\n              DataNascimento: dataHora,\n              sexo: sexo,\n              CidadeId: cidadeId\n            }).then(function () {\n              return navigation.navigate('ListaPessoas');\n            }).catch(function (error) {\n              return Alert.alert(error.toString());\n            }));\n\n          case 6:\n            _context.next = 8;\n            break;\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function removerElemento(identificador) {\n    Alert.alert('Atenção', 'Confirma a remoção do contato?', [{\n      text: 'Sim',\n      onPress: function onPress() {\n        return efetivaRemoverContato(identificador);\n      }\n    }, {\n      text: 'Não',\n      style: 'cancel'\n    }]);\n  }\n\n  function efetivaRemoverContato(identificador) {\n    return _regeneratorRuntime.async(function efetivaRemoverContato$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(excluiContato(identificador));\n\n          case 3:\n            Keyboard.dismiss();\n            limparCampos();\n            setRecarregaTela(true);\n            Alert.alert('Contato apagado com sucesso!!!');\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            Alert.alert(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Header, {\n      exibeIconeNovoRegistro: false\n    }), _jsxs(ScrollView, {\n      style: styles.areaScroolViewForm,\n      children: [_jsx(Text, {\n        style: styles.labelCampoEdicao,\n        children: \"Id\"\n      }), _jsx(TextInput, {\n        style: styles.caixaTexto,\n        onChangeText: function onChangeText(texto) {\n          return setId(texto);\n        },\n        value: id\n      }), _jsx(Text, {\n        style: styles.labelCampoEdicao,\n        children: \"Nome\"\n      }), _jsx(TextInput, {\n        style: styles.caixaTexto,\n        onChangeText: function onChangeText(texto) {\n          return setNome(texto);\n        },\n        value: nome\n      }), _jsx(Text, {\n        style: styles.labelCampoEdicao,\n        children: \"Sexo\"\n      }), _jsx(TextInput, {\n        style: styles.caixaTexto,\n        onChangeText: function onChangeText(texto) {\n          return setSexo(texto);\n        },\n        value: sexo\n      }), _jsx(Text, {\n        style: styles.labelCampoEdicao,\n        children: \"Cidade\"\n      }), _jsx(TextInput, {\n        style: styles.caixaTexto,\n        onChangeText: function onChangeText(texto) {\n          return setCidadeId(texto);\n        },\n        value: cidadeId\n      }), _jsx(Text, {\n        style: styles.labelCampoEdicao,\n        children: \"Data de nascimento\"\n      }), _jsx(DateTimeInput, {\n        type: 'date',\n        onSave: setDataNascimento\n      }), _jsxs(View, {\n        style: styles.areaBotoes,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.botao,\n          onPress: function onPress() {\n            return salva();\n          },\n          children: _jsx(Text, {\n            style: styles.textoBotao,\n            children: \"Salvar\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.botaoCancela,\n          onPress: function onPress() {\n            return navigation.navigate('ListaPessoas');\n          },\n          children: _jsx(Text, {\n            style: styles.textoBotao,\n            children: \"Cancelar\"\n          })\n        })]\n      })]\n    })]\n  });\n}","map":{"version":3,"sources":["C:/AulaFTT/_NODE/cadPessoas/telas/pessoa/form.js"],"names":["useState","useEffect","styles","Ionicons","Entypo","Header","DateTimeInput","api","format","CadastroPessoa","navigation","props","state","params","console","log","id","setId","nome","setNome","sexo","setSexo","cidadeId","setCidadeId","Date","DataNascimento","setDataNascimento","pessoa","inclusao","salva","Alert","alert","dataHora","post","CidadeId","then","navigate","catch","error","toString","removerElemento","identificador","text","onPress","efetivaRemoverContato","style","excluiContato","Keyboard","dismiss","limparCampos","setRecarregaTela","container","areaScroolViewForm","labelCampoEdicao","caixaTexto","texto","areaBotoes","botao","textoBotao","botaoCancela"],"mappings":"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","sourcesContent":["import {\r\n  Alert, Text, TextInput, TouchableOpacity,\r\n  View, Keyboard, ScrollView, Image\r\n} from 'react-native';\r\nimport { useState, useEffect } from 'react';\r\nimport styles from './styles';\r\nimport { Ionicons, Entypo } from '@expo/vector-icons';\r\nimport Header from '../../componentes/Header';\r\nimport DateTimeInput from '../../componentes/DateTimeInput';\r\nimport api from '../../service/api';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function CadastroPessoa({ navigation }) {\r\n\r\n  let props = navigation.state.params;  \r\n  console.log(navigation);\r\n\r\n  const [id, setId] = useState();\r\n  const [nome, setNome] = useState();\r\n  const [sexo, setSexo] = useState();\r\n  const [cidadeId, setCidadeId] = useState();\r\n  const [DataNascimento, setDataNascimento] = useState(new Date())\r\n\r\n\r\n  useEffect(() => {    \r\n    let props = navigation.state.params;\r\n    console.log(props);\r\n    let pessoa = props.pessoa;\r\n    let inclusao = props.inclusao;\r\n\r\n    console.log(pessoa);\r\n    console.log(\"inclusao: \" + inclusao);\r\n\r\n    if (!inclusao) {   \r\n\r\n      setId(pessoa.id);\r\n      setNome(pessoa.nome);\r\n    }\r\n\r\n  },\r\n    []\r\n  );\r\n\r\n\r\n  async function salva() {\r\n    if (!id || id <= 0)\r\n      return Alert.alert(\"Informe o Id\");\r\n\r\n    let dataHora = format(DataNascimento, 'yyyy-MM-dd') + 'T00:00';\r\n\r\n    if (inclusao) {\r\n      await api.post('/Pessoa', {\r\n        id,\r\n        nome,\r\n        DataNascimento: dataHora,\r\n        sexo,\r\n        CidadeId: cidadeId,\r\n      })\r\n        .then(() => navigation.navigate('ListaPessoas'))\r\n        .catch(error => Alert.alert(error.toString()));\r\n    }\r\n    else {\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  function removerElemento(identificador) {\r\n    Alert.alert('Atenção', 'Confirma a remoção do contato?',\r\n      [\r\n        {\r\n          text: 'Sim',\r\n          onPress: () => efetivaRemoverContato(identificador),\r\n        },\r\n        {\r\n          text: 'Não',\r\n          style: 'cancel',\r\n        }\r\n      ]);\r\n  }\r\n\r\n  async function efetivaRemoverContato(identificador) {\r\n    try {\r\n      await excluiContato(identificador);\r\n      Keyboard.dismiss();\r\n      limparCampos();\r\n      setRecarregaTela(true);\r\n      Alert.alert('Contato apagado com sucesso!!!');\r\n    } catch (e) {\r\n      Alert.alert(e);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header exibeIconeNovoRegistro={false} />\r\n\r\n      <ScrollView style={styles.areaScroolViewForm}>\r\n        <Text style={styles.labelCampoEdicao}>Id</Text>\r\n        <TextInput style={styles.caixaTexto}\r\n          onChangeText={(texto) => setId(texto)}\r\n          value={id} />\r\n\r\n        <Text style={styles.labelCampoEdicao}>Nome</Text>\r\n        <TextInput style={styles.caixaTexto}\r\n          onChangeText={(texto) => setNome(texto)}\r\n          value={nome} />\r\n\r\n        <Text style={styles.labelCampoEdicao}>Sexo</Text>\r\n        <TextInput style={styles.caixaTexto}\r\n          onChangeText={(texto) => setSexo(texto)}\r\n          value={sexo} />\r\n\r\n        <Text style={styles.labelCampoEdicao}>Cidade</Text>\r\n        <TextInput style={styles.caixaTexto}\r\n          onChangeText={(texto) => setCidadeId(texto)}\r\n          value={cidadeId} />\r\n\r\n\r\n        <Text style={styles.labelCampoEdicao}>Data de nascimento</Text>\r\n        <DateTimeInput type={'date'} onSave={setDataNascimento} />\r\n\r\n\r\n        <View style={styles.areaBotoes}>\r\n          <TouchableOpacity style={styles.botao} onPress={() => salva()}>\r\n            <Text style={styles.textoBotao}>Salvar</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity style={styles.botaoCancela} onPress={() => navigation.navigate('ListaPessoas')}>\r\n            <Text style={styles.textoBotao}>Cancelar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </ScrollView>\r\n\r\n    </View >\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}