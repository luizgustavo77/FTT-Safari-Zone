{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport styles from \"./styles\";\nimport { format } from 'date-fns';\nimport iconCalendar from \"../../assets/calendar.png\";\nimport iconClock from \"../../assets/clock.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DateTimeInput(_ref) {\n  var type = _ref.type,\n      onSave = _ref.onSave,\n      theDate = _ref.theDate;\n\n  var _useState = useState('date'),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || theDate;\n    setShow(Platform.OS === 'ios');\n    onSave(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  return _jsxs(TouchableOpacity, {\n    style: styles.container,\n    onPress: type === 'date' ? showDatepicker : showTimepicker,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: type === 'date' ? 'Definir data...' : 'Definir hora...',\n      editable: false,\n      value: type === 'date' ? format(theDate, 'dd/MM/yyyy') : format(theDate, 'HH:mm')\n    }), _jsx(Image, {\n      style: styles.iconTextInput,\n      source: type === 'date' ? iconCalendar : iconClock\n    }), show && _jsx(DateTimePicker, {\n      testID: \"dateTimePicker\",\n      value: theDate,\n      mode: mode,\n      is24Hour: true,\n      display: \"default\",\n      onChange: onChange\n    })]\n  });\n}\n;","map":{"version":3,"names":["React","useState","useEffect","DateTimePicker","styles","format","iconCalendar","iconClock","DateTimeInput","type","onSave","theDate","mode","setMode","show","setShow","onChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","showTimepicker","container","input","iconTextInput"],"sources":["C:/Users/Dell/Downloads/cadpessoasCompleto/cadPessoas_2/componentes/DateTimeInput/index.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TextInput, Text, TouchableOpacity, Platform, Image } from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport styles from './styles';\r\nimport { format } from 'date-fns';\r\n\r\nimport iconCalendar from '../../assets/calendar.png';\r\nimport iconClock from '../../assets/clock.png';\r\n\r\nexport default function DateTimeInput({ type, onSave, theDate }) {  \r\n  \r\n  const [mode, setMode] = useState('date');\r\n  const [show, setShow] = useState(false); \r\n\r\n  const onChange = (event, selectedDate) => {\r\n    const currentDate = selectedDate || theDate;\r\n    setShow(Platform.OS === 'ios');\r\n\r\n    onSave(currentDate);\r\n  };\r\n\r\n  const showMode = (currentMode) => {\r\n    setShow(true);\r\n    setMode(currentMode);\r\n  };\r\n\r\n  const showDatepicker = () => {\r\n    showMode('date');\r\n  };\r\n\r\n  const showTimepicker = () => {\r\n    showMode('time');\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity style={styles.container}\r\n      onPress={type === 'date' ? showDatepicker : showTimepicker}>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder={type === 'date' ? 'Definir data...' : 'Definir hora...'}\r\n        editable={false}\r\n        value={type === 'date' ? format(theDate, 'dd/MM/yyyy') : format(theDate, 'HH:mm')}\r\n      />\r\n\r\n      <Image\r\n        style={styles.iconTextInput}\r\n        source={type === 'date' ? iconCalendar : iconClock}\r\n      />\r\n\r\n      {show && (\r\n        <DateTimePicker\r\n          testID=\"dateTimePicker\"\r\n          value={theDate}\r\n          mode={mode}\r\n          is24Hour={true}\r\n          display=\"default\"\r\n          onChange={onChange}\r\n        />\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,MAAP;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAOC,YAAP;AACA,OAAOC,SAAP;;;AAEA,eAAe,SAASC,aAAT,OAAkD;EAAA,IAAzBC,IAAyB,QAAzBA,IAAyB;EAAA,IAAnBC,MAAmB,QAAnBA,MAAmB;EAAA,IAAXC,OAAW,QAAXA,OAAW;;EAE/D,gBAAwBV,QAAQ,CAAC,MAAD,CAAhC;EAAA;EAAA,IAAOW,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAwBZ,QAAQ,CAAC,KAAD,CAAhC;EAAA;EAAA,IAAOa,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,YAAR,EAAyB;IACxC,IAAMC,WAAW,GAAGD,YAAY,IAAIP,OAApC;IACAI,OAAO,CAACK,QAAQ,CAACC,EAAT,KAAgB,KAAjB,CAAP;IAEAX,MAAM,CAACS,WAAD,CAAN;EACD,CALD;;EAOA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD,EAAiB;IAChCR,OAAO,CAAC,IAAD,CAAP;IACAF,OAAO,CAACU,WAAD,CAAP;EACD,CAHD;;EAKA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3BF,QAAQ,CAAC,MAAD,CAAR;EACD,CAFD;;EAIA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3BH,QAAQ,CAAC,MAAD,CAAR;EACD,CAFD;;EAIA,OACE,MAAC,gBAAD;IAAkB,KAAK,EAAElB,MAAM,CAACsB,SAAhC;IACE,OAAO,EAAEjB,IAAI,KAAK,MAAT,GAAkBe,cAAlB,GAAmCC,cAD9C;IAAA,WAGE,KAAC,SAAD;MACE,KAAK,EAAErB,MAAM,CAACuB,KADhB;MAEE,WAAW,EAAElB,IAAI,KAAK,MAAT,GAAkB,iBAAlB,GAAsC,iBAFrD;MAGE,QAAQ,EAAE,KAHZ;MAIE,KAAK,EAAEA,IAAI,KAAK,MAAT,GAAkBJ,MAAM,CAACM,OAAD,EAAU,YAAV,CAAxB,GAAkDN,MAAM,CAACM,OAAD,EAAU,OAAV;IAJjE,EAHF,EAUE,KAAC,KAAD;MACE,KAAK,EAAEP,MAAM,CAACwB,aADhB;MAEE,MAAM,EAAEnB,IAAI,KAAK,MAAT,GAAkBH,YAAlB,GAAiCC;IAF3C,EAVF,EAeGO,IAAI,IACH,KAAC,cAAD;MACE,MAAM,EAAC,gBADT;MAEE,KAAK,EAAEH,OAFT;MAGE,IAAI,EAAEC,IAHR;MAIE,QAAQ,EAAE,IAJZ;MAKE,OAAO,EAAC,SALV;MAME,QAAQ,EAAEI;IANZ,EAhBJ;EAAA,EADF;AA4BD;AAAA"},"metadata":{},"sourceType":"module"}