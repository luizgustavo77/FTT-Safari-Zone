{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport styles from \"./styles\";\nimport { format } from 'date-fns';\nimport iconCalendar from \"../../assets/calendar.png\";\nimport iconClock from \"../../assets/clock.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DateTimeInput(_ref) {\n  var type = _ref.type,\n      onSave = _ref.onSave;\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState('date'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setDate(currentDate);\n    onSave(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  return _jsxs(TouchableOpacity, {\n    style: styles.container,\n    onPress: type === 'date' ? showDatepicker : showTimepicker,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: type === 'date' ? 'Definir data...' : 'Definir hora...',\n      editable: false,\n      value: type === 'date' ? format(date, 'dd/MM/yyyy') : format(date, 'HH:mm')\n    }), _jsx(Image, {\n      style: styles.iconTextInput,\n      source: type === 'date' ? iconCalendar : iconClock\n    }), show && _jsx(DateTimePicker, {\n      testID: \"dateTimePicker\",\n      value: date,\n      mode: mode,\n      is24Hour: true,\n      display: \"default\",\n      onChange: onChange\n    })]\n  });\n}\n;","map":{"version":3,"sources":["C:/AulaFTT/_NODE/cadPessoas/componentes/DateTimeInput/index.js"],"names":["React","useState","DateTimePicker","styles","format","iconCalendar","iconClock","DateTimeInput","type","onSave","Date","date","setDate","mode","setMode","show","setShow","onChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","showTimepicker","container","input","iconTextInput"],"mappings":";AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,MAAP;AACA,SAAQC,MAAR,QAAqB,UAArB;AAEA,OAAOC,YAAP;AACA,OAAOC,SAAP;;;AAEA,eAAe,SAASC,aAAT,OAAyC;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,MAAU,QAAVA,MAAU;;AACtD,kBAAwBR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBX,QAAQ,CAAC,MAAD,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBb,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOc,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,YAAR,EAAyB;AACxC,QAAMC,WAAW,GAAGD,YAAY,IAAIR,IAApC;AACAK,IAAAA,OAAO,CAACK,QAAQ,CAACC,EAAT,KAAgB,KAAjB,CAAP;AACAV,IAAAA,OAAO,CAACQ,WAAD,CAAP;AAEAX,IAAAA,MAAM,CAACW,WAAD,CAAN;AACD,GAND;;AAQA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD,EAAiB;AAChCR,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,OAAO,CAACU,WAAD,CAAP;AACD,GAHD;;AAKA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BF,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,GAFD;;AAIA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BH,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,GAFD;;AAIA,SACE,MAAC,gBAAD;AAAmB,IAAA,KAAK,EAAEpB,MAAM,CAACwB,SAAjC;AACmB,IAAA,OAAO,EAAGnB,IAAI,KAAG,MAAP,GAAgBiB,cAAhB,GAAiCC,cAD9D;AAAA,eAGI,KAAC,SAAD;AACI,MAAA,KAAK,EAAEvB,MAAM,CAACyB,KADlB;AAEI,MAAA,WAAW,EAAEpB,IAAI,KAAG,MAAP,GAAgB,iBAAhB,GAAoC,iBAFrD;AAGI,MAAA,QAAQ,EAAE,KAHd;AAII,MAAA,KAAK,EAAGA,IAAI,KAAG,MAAP,GAAgBJ,MAAM,CAACO,IAAD,EAAO,YAAP,CAAtB,GAA6CP,MAAM,CAACO,IAAD,EAAO,OAAP;AAJ/D,MAHJ,EAYI,KAAC,KAAD;AACI,MAAA,KAAK,EAAER,MAAM,CAAC0B,aADlB;AAEI,MAAA,MAAM,EAAErB,IAAI,KAAG,MAAP,GAAgBH,YAAhB,GAA+BC;AAF3C,MAZJ,EAiBKS,IAAI,IACL,KAAC,cAAD;AACE,MAAA,MAAM,EAAC,gBADT;AAEE,MAAA,KAAK,EAAEJ,IAFT;AAGE,MAAA,IAAI,EAAEE,IAHR;AAIE,MAAA,QAAQ,EAAE,IAJZ;AAKE,MAAA,OAAO,EAAC,SALV;AAME,MAAA,QAAQ,EAAEI;AANZ,MAlBJ;AAAA,IADF;AA8BD;AAAA","sourcesContent":["\r\nimport React, {useState} from 'react';\r\nimport {TextInput, Text, TouchableOpacity, Platform, Image} from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport styles from './styles';\r\nimport {format} from 'date-fns';\r\n\r\nimport iconCalendar from '../../assets/calendar.png';\r\nimport iconClock from '../../assets/clock.png';\r\n\r\nexport default function DateTimeInput({ type, onSave }) {\r\n  const [date, setDate] = useState(new Date());\r\n  const [mode, setMode] = useState('date');\r\n  const [show, setShow] = useState(false);\r\n\r\n  const onChange = (event, selectedDate) => {\r\n    const currentDate = selectedDate || date;\r\n    setShow(Platform.OS === 'ios');\r\n    setDate(currentDate);\r\n\r\n    onSave(currentDate);\r\n  };\r\n\r\n  const showMode = (currentMode) => {\r\n    setShow(true);\r\n    setMode(currentMode);\r\n  };\r\n\r\n  const showDatepicker = () => {\r\n    showMode('date');\r\n  };\r\n\r\n  const showTimepicker = () => {\r\n    showMode('time');\r\n  };\r\n\r\n  return (      \r\n    <TouchableOpacity  style={styles.container} \r\n                       onPress={ type==='date' ? showDatepicker : showTimepicker}>\r\n        \r\n        <TextInput\r\n            style={styles.input}\r\n            placeholder={type==='date' ? 'Definir data...' : 'Definir hora...'}\r\n            editable={false}\r\n            value={ type==='date'?  format(date, 'dd/MM/yyyy') : format(date, 'HH:mm')  }            \r\n        />\r\n\r\n\r\n\r\n        <Image\r\n            style={styles.iconTextInput}\r\n            source={type==='date' ? iconCalendar : iconClock}\r\n        />\r\n\r\n        {show && (\r\n        <DateTimePicker\r\n          testID=\"dateTimePicker\"\r\n          value={date}\r\n          mode={mode}\r\n          is24Hour={true}\r\n          display=\"default\"\r\n          onChange={onChange}\r\n        />\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}